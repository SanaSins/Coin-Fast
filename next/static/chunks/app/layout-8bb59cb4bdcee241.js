(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[177], { 47790: () => { }, 56380: (e, t, r) => { Promise.resolve().then(r.t.bind(r, 53704, 23)), Promise.resolve().then(r.t.bind(r, 4147, 23)), Promise.resolve().then(r.t.bind(r, 38489, 23)), Promise.resolve().then(r.t.bind(r, 30347, 23)), Promise.resolve().then(r.bind(r, 96654)), Promise.resolve().then(r.bind(r, 19345)) }, 96654: (e, t, r) => { "use strict"; r.d(t, { default: () => h }); var a = r(95155), n = r(12115); r(23669); var i = r(37646), s = r(70188), o = r(90170), l = r(55732), c = r(51406), d = r(88726), p = r(77369), m = r(87358); let x = e => { let { children: t } = e, r = "mainnet" === m.env.NEXT_PUBLIC_SOLANA_NETWORK ? i.B.Mainnet : i.B.Devnet, x = (0, n.useMemo)(() => { let e = "https://mainnet.helius-rpc.com/?api-key=e89f297d-4e76-42f3-b8f6-8529874a42cf"; return console.log("Using RPC endpoint:", e), e }, []); (0, n.useEffect)(() => { (async () => { try { let e = new p.Connection(x), t = await e.getVersion(); console.log("Solana connection established:", t) } catch (e) { console.error("Failed to connect to Solana:", e) } })() }, [x]); let h = (0, n.useMemo)(() => [new c.c, new d.d({ network: r })], [r]); return (0, a.jsx)(s.S, { endpoint: x, config: { commitment: "confirmed" }, children: (0, a.jsx)(o.r, { wallets: h, autoConnect: !0, children: (0, a.jsx)(l.I, { children: t }) }) }) }; function h(e) { let { children: t } = e, [r, i] = (0, n.useState)(!1); return ((0, n.useEffect)(() => (i(!0), () => i(!1)), []), r) ? (0, a.jsx)(x, { children: t }) : (0, a.jsx)("div", { className: "min-h-screen bg-gradient-to-br from-[#0f1729] via-[#0c1527] to-[#111827]" }) } }, 19345: (e, t, r) => { "use strict"; r.d(t, { Navbar: () => c }); var a = r(95155), n = r(12115), i = r(11929), s = r(41318), o = r(48173), l = r.n(o); let c = () => { let { publicKey: e, disconnect: t } = (0, i.v)(), [r, o] = (0, n.useState)(!1), [c, d] = (0, n.useState)(!1), [p, m] = (0, n.useState)(!1), x = (0, n.useRef)(null); (0, n.useEffect)(() => { let e = e => { x.current && !x.current.contains(e.target) && d(!1) }; return document.addEventListener("mousedown", e), () => document.removeEventListener("mousedown", e) }, []); let h = async () => { e && (await navigator.clipboard.writeText(e.toString()), o(!0), setTimeout(() => o(!1), 2e3), d(!1)) }, u = async () => { try { await t(), d(!1) } catch (e) { console.error("Failed to disconnect:", e) } }; return (0, a.jsx)("nav", { className: "fixed top-[21px] md:top-[27px] left-0 right-0 z-50 bg-gray-800/50 backdrop-blur-sm border-b border-gray-700/50", children: (0, a.jsx)("div", { className: "container mx-auto px-4", children: (0, a.jsxs)("div", { className: "flex justify-between items-center h-14 md:h-16", children: [(0, a.jsxs)("div", { className: "flex items-center space-x-2 md:space-x-3", children: [(0, a.jsx)("button", { className: "md:hidden p-2 text-gray-400 hover:text-white", onClick: () => m(!p), children: (0, a.jsx)("svg", { className: "w-6 h-6", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", children: (0, a.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 6h16M4 12h16M4 18h16" }) }) }), (0, a.jsx)(l(), { href: "/", className: "hover:opacity-80 transition-opacity duration-200", children: (0, a.jsxs)("span", { className: "font-bold truncate", children: [(0, a.jsx)("span", { className: "hidden sm:inline bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500 text-2xl md:text-3xl font-extrabold tracking-tight", children: "CoinUp" }), (0, a.jsx)("span", { className: "sm:hidden bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500 text-2xl font-extrabold tracking-tight", children: "CoinUp" })] }) })] }), (0, a.jsx)("div", { className: "hidden md:flex items-center justify-center flex-1", children: (0, a.jsxs)("div", { className: "flex space-x-4", children: [(0, a.jsxs)(l(), { href: "/", className: "relative group px-4 py-2 text-sm md:text-base font-medium tracking-wide", children: [(0, a.jsx)("span", { className: "relative z-10 bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:from-cyan-300 group-hover:to-purple-400 transition-all duration-200", children: "Create Token" }), (0, a.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-cyan-500/5 to-purple-500/5 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200" })] }), (0, a.jsxs)(l(), { href: "/liquidity-pool.html", className: "relative group px-4 py-2 text-sm md:text-base font-medium tracking-wide", children: [(0, a.jsx)("span", { className: "relative z-10 bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:from-cyan-300 group-hover:to-purple-400 transition-all duration-200", children: "Liquidity Pool" }), (0, a.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-cyan-500/5 to-purple-500/5 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200" })] }), (0, a.jsxs)(l(), { href: "/manage-liquidity.html", className: "relative group px-4 py-2 text-sm md:text-base font-medium tracking-wide", children: [(0, a.jsx)("span", { className: "relative z-10 bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:from-cyan-300 group-hover:to-purple-400 transition-all duration-200", children: "Manage Liquidity" }), (0, a.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-cyan-500/5 to-purple-500/5 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200" })] })] }) }), (0, a.jsx)("div", { className: "flex items-center", children: (0, a.jsx)(s.x, { className: "!h-7 md:!h-10 !py-0.5 md:!py-2.5 !text-sm md:!text-base bg-gradient-to-r from-cyan-500 to-purple-600 !rounded-lg hover:opacity-90 transition", onClick: t => { e && (t.preventDefault(), d(!c)) } }) }), (0, a.jsx)("div", { className: "".concat(p ? "block" : "hidden", " md:hidden absolute top-full left-0 right-0 bg-gray-800/95 backdrop-blur-sm border-b border-gray-700/50"), children: (0, a.jsxs)("div", { className: "px-4 py-3 space-y-3", children: [(0, a.jsx)(l(), { href: "/", className: "block text-gray-300 hover:text-white py-2", onClick: () => m(!1), children: "Create Token" }), (0, a.jsx)(l(), { href: "/liquidity-pool.html", className: "block text-gray-300 hover:text-white py-2", onClick: () => m(!1), children: "Liquidity Pool" }), (0, a.jsx)(l(), { href: "/manage-liquidity.html", className: "block text-gray-300 hover:text-white py-2", onClick: () => m(!1), children: "Manage Liquidity" }), (0, a.jsx)("div", { className: "py-2", children: (0, a.jsx)(s.x, { className: "!h-7 md:!h-10 !py-0.5 md:!py-2.5 !text-sm md:!text-base bg-gradient-to-r from-cyan-500 to-purple-600 !rounded-lg hover:opacity-90 transition" }) })] }) }), (0, a.jsx)("div", { className: "relative", ref: x, children: c && e && (0, a.jsxs)("div", { className: "absolute right-0 mt-2 w-48 rounded-lg bg-gray-800 shadow-lg border border-gray-700 overflow-hidden", children: [(0, a.jsx)("button", { onClick: h, className: "w-full px-3 md:px-4 py-2 text-left text-sm text-gray-200 hover:bg-gray-700 active:bg-gray-600 transition flex items-center space-x-2", children: (0, a.jsx)("span", { children: r ? "Copied!" : "Copy address" }) }), (0, a.jsx)("button", { onClick: () => d(!1), className: "w-full px-3 md:px-4 py-2 text-left text-sm text-gray-200 hover:bg-gray-700 active:bg-gray-600 transition", children: "Change wallet" }), (0, a.jsx)("button", { onClick: u, className: "w-full px-3 md:px-4 py-2 text-left text-sm text-gray-200 hover:bg-gray-700 active:bg-gray-600 transition", children: "Disconnect" })] }) })] }) }) }) } }, 30347: () => { } }, e => { var t = t => e(e.s = t); e.O(0, [896, 252, 956, 789, 156, 441, 517, 358], () => t(56380)), _N_E = e.O() }]);
